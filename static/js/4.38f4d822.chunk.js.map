{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","className","classes","dialog","active","src","images","to","id","name","Message","message","maxLength15","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreater","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iICG/MC,EAA6B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKD,S,mCCOPE,EAPI,SAACC,GACjB,OAAO,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACJ,qBAAKC,IAAKL,EAAMM,SAChB,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,SAAsCR,EAAMS,WCDnCC,EAJC,SAACV,GACd,OAAO,qBAAKC,UAAWC,IAAQS,QAAxB,SAAkCX,EAAMW,W,kCCiC5CC,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAZL,SAACf,GACrB,OACG,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACG,8BACG,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,qBACxDC,SAAU,CAACC,IAAUZ,OAE9B,8BAAK,kDAOCa,EA3CC,SAACzB,GAEd,IAAIJ,EAAQI,EAAM0B,YAEdC,EAAkB/B,EAAMgC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,GAAIF,OAAQwB,EAAEzB,SACvF0B,EAAmBnC,EAAMoC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAMnE,OAAKX,EAAMH,OAGR,sBAAKI,UAAWC,IAAQ0B,QAAxB,UACG,qBAAK3B,UAAWC,IAAQgC,aAAxB,SACIP,IAEJ,sBAAK1B,UAAWC,IAAQ8B,SAAxB,UACG,8BAAMD,IACN,cAACjB,EAAD,CAAqBG,SAbV,SAACkB,GAClBnC,EAAMoC,YAAYD,EAAOE,yBAGF,cAAC,IAAD,CAAU9B,GAAG,YCD3B+B,sBACZC,aAdmB,SAAC3C,GACpB,MAAO,CACJ8B,YAAa9B,EAAM8B,gBAGA,SAACc,GACvB,MAAO,CACJJ,YAAa,SAACC,GACXG,EAASC,YAAmBJ,UJPN,SAACK,GAAe,IAEtCC,EAFqC,uKAIrC,OAAKC,KAAK5C,MAAMH,OAET,cAAC6C,EAAD,eAAeE,KAAK5C,QAFI,cAAC,IAAD,CAAUO,GAAG,eAJP,GAEXsC,IAAMH,WAUtC,OAFqCH,YAAQ5C,EAAR4C,CAAoCI,KIE7DL,CAGZb","file":"static/js/4.38f4d822.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__bCqk8\",\"dialogsItems\":\"Dialogs_dialogsItems__3jLHY\",\"dialog\":\"Dialogs_dialog__2xZLe\",\"active\":\"Dialogs_active__1SgcU\",\"messages\":\"Dialogs_messages__2KhFZ\",\"message\":\"Dialogs_message__2ysSr\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const witAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />;\r\n\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n   return <div className={classes.dialog + ' ' + classes.active}>\r\n      <img src={props.images} />\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n   </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n   return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControl';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} images={d.src} />);\r\n   let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n\r\n   let addNewMessage = (values) => {\r\n      props.sendMessage(values.newMessageBody);\r\n   }\r\n\r\n   if (!props.isAuth) return <Redirect to='/login' />;\r\n\r\n   return (\r\n      <div className={classes.dialogs}>\r\n         <div className={classes.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n         <div className={classes.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' \r\n                  validate={[required, maxLength15]} />\r\n         </div>\r\n         <div><button>Send</button></div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { witAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {sendMessageCreater } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (newMessageBody) => {\r\n         dispatch(sendMessageCreater(newMessageBody));\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose (\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   witAuthRedirect\r\n) (Dialogs);\r\n"],"sourceRoot":""}